# ansible-playbook --ask-become-pass software.yml

- hosts: localhost
  tasks:
    - name: Instalar pacotes padrão
      become: true
      become_user: root
      apt:
        state: present
        name:
          - htop

    - name: Criar diretórios padrão
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/bin"
        state: directory
        mode: '0755'

    - name: Instalar o mkcert
      block:
        - name: Verificar se o mkcert está instalado
          command: which mkcert
          register: mkcert_check
          ignore_errors: yes

        - name: Baixar o latest release mkcert
          get_url:
            url: 'https://dl.filippo.io/mkcert/latest?for=linux/amd64'
            dest: "{{ ansible_env.HOME }}/bin/mkcert"
          when: mkcert_check.rc != 0

        - name: Tornar o mkcert arquivo executável
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/bin/mkcert"
            mode: '0755'
          when: mkcert_check.rc != 0

        - name: Executar o script de instalação
          ansible.builtin.shell: "{{ ansible_env.HOME }}/bin/mkcert --install"

    - name: Instalar e configurar o aws cli
      become: true
      block:        
        - name: Verificar se o aws cli está instalado
          command: which aws
          register: aws_check
          ignore_errors: yes

        - name: Baixar o arquivo .zip
          get_url:
            url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
            dest: '/tmp/awscli-exe-linux-x86_64.zip'
          when: aws_check.rc != 0
            
        - name: Extrair o arquivo .zip
          ansible.builtin.unarchive:
            src: "/tmp/awscli-exe-linux-x86_64.zip"
            dest: "/tmp"
            remote_src: yes
          when: aws_check.rc != 0

        - name: Executar o script de instalação
          ansible.builtin.shell: "/tmp/aws/install"
          when: aws_check.rc != 0

    - name: Instalar e configurar o VSCode
      become: 'yes'
      block:
        - name: Verificar se o VS Code está instalado
          command: which code
          register: vscode_check
          ignore_errors: yes

        - name: Baixar o arquivo .deb
          get_url:
            url: 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64'
            dest: '/tmp/vscode-linux-deb-x64.deb'
          when: vscode_check.rc != 0

        - name: Instalar o arquivo .deb
          apt:
            deb: '/tmp/vscode-linux-deb-x64.deb'
          when: vscode_check.rc != 0

        - name: Remover o arquivo .deb
          file:
            path: '/tmp/vscode-linux-deb-x64.deb'
            state: 'absent'
          when: vscode_check.rc != 0

    - name: Instalar e configurar o DBeaver
      become: yes
      block:
        - name: Verificar se o DBeaver está instalado
          command: which dbeaver
          register: dbeaver_check
          ignore_errors: yes

        - name: Baixar o arquivo .deb
          get_url:
            url: "https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb"
            dest: '/tmp/dbeaver-ce_latest_amd64.deb'
          when: dbeaver_check.rc != 0

        - name: Instalar o arquivo .deb
          apt:
            deb: '/tmp/dbeaver-ce_latest_amd64.deb'
          when: dbeaver_check.rc != 0

        - name: Remover o arquivo .deb
          file:
            path: '/tmp/dbeaver-ce_latest_amd64.deb'
            state: 'absent'
          when: dbeaver_check.rc != 0

    - name: Instalar e configurar o Studio3T
      become: yes
      block:
        - name: Verificar se o Stdudio3T está instalado
          ansible.builtin.stat:
            path: /opt/studio3t/Studio-3T
          register: studio3t_check

        - name: Criar diretório de destino
          ansible.builtin.file:
            path: /tmp/studio-3t
            state: directory
            mode: '0755'
          when: studio3t_check.stat.exists == False

        - name: Baixar o arquivo .tar
          get_url:
            url: "https://download.studio3t.com/studio-3t/linux/2024.4.1/studio-3t-linux-x64.tar.gz"
            dest: '/tmp/studio-3t/studio-3t-linux-x64.tar.gz'
          when: studio3t_check.stat.exists == False
            
        - name: Extrair o arquivo tar.gz
          ansible.builtin.unarchive:
            src: /tmp/studio-3t/studio-3t-linux-x64.tar.gz
            dest: /tmp/studio-3t
            remote_src: yes
          when: studio3t_check.stat.exists == False

        - name: Executar o script de instalação
          ansible.builtin.shell: "/tmp/studio-3t/studio-3t-linux-x64.sh"
          when: studio3t_check.stat.exists == False